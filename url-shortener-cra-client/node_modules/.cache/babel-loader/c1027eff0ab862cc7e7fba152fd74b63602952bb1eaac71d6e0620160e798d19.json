{"ast":null,"code":"// import { useParams } from 'react-router-dom';\n// import { useEffect } from 'react';\n\n// const RedirectHandler = () => {\n//   const { shortcode } = useParams();\n\n//   useEffect(() => {\n//     const stored = JSON.parse(localStorage.getItem(\"urlData\")) || {};\n//     const entry = stored[shortcode];\n\n//     if (entry && Date.now() < entry.expiresAt) {\n//       entry.clicks.push({\n//         timestamp: new Date().toISOString(),\n//         source: document.referrer || \"direct\",\n//         geoLocation: \"Unknown\",\n//       });\n//       stored[shortcode] = entry;\n//       localStorage.setItem(\"urlData\", JSON.stringify(stored));\n//       window.location.href = entry.longUrl;\n//     } else {\n//       alert(\"This link is invalid or expired.\");\n//     }\n//   }, [shortcode]);\n\n//   return <p className=\"text-center mt-10\">Redirecting...</p>;\n// };\n\n// export default RedirectHandler;","map":{"version":3,"names":[],"sources":["D:/Placement/url-shortener-cra-client/src/pages/RedirectHandler.js"],"sourcesContent":["// import { useParams } from 'react-router-dom';\n// import { useEffect } from 'react';\n\n// const RedirectHandler = () => {\n//   const { shortcode } = useParams();\n\n//   useEffect(() => {\n//     const stored = JSON.parse(localStorage.getItem(\"urlData\")) || {};\n//     const entry = stored[shortcode];\n\n//     if (entry && Date.now() < entry.expiresAt) {\n//       entry.clicks.push({\n//         timestamp: new Date().toISOString(),\n//         source: document.referrer || \"direct\",\n//         geoLocation: \"Unknown\",\n//       });\n//       stored[shortcode] = entry;\n//       localStorage.setItem(\"urlData\", JSON.stringify(stored));\n//       window.location.href = entry.longUrl;\n//     } else {\n//       alert(\"This link is invalid or expired.\");\n//     }\n//   }, [shortcode]);\n\n//   return <p className=\"text-center mt-10\">Redirecting...</p>;\n// };\n\n// export default RedirectHandler;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}